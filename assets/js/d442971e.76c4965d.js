"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3e3],{95788:(e,n,r)=>{r.d(n,{Iu:()=>l,yg:()=>m});var t=r(11504);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=t.createContext({}),p=function(e){var n=t.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},l=function(e){var n=p(e.components);return t.createElement(a.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(r),d=o,m=u["".concat(a,".").concat(d)]||u[d]||f[d]||c;return r?t.createElement(m,s(s({ref:n},l),{},{components:r})):t.createElement(m,s({ref:n},l))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=r.length,s=new Array(c);s[0]=d;var i={};for(var a in n)hasOwnProperty.call(n,a)&&(i[a]=n[a]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<c;p++)s[p]=r[p];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},35168:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var t=r(45072),o=r(95656),c=(r(11504),r(95788)),s=["components"],i={title:"rucio-storage-consistency-actions"},a=void 0,p={unversionedId:"bin/rucio-storage-consistency-actions",id:"bin/rucio-storage-consistency-actions",title:"rucio-storage-consistency-actions",description:"",source:"@site/../docs/bin/rucio-storage-consistency-actions.md",sourceDirName:"bin",slug:"/bin/rucio-storage-consistency-actions",permalink:"/documentation/bin/rucio-storage-consistency-actions",draft:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-storage-consistency-actions.md",tags:[],version:"current",frontMatter:{title:"rucio-storage-consistency-actions"},sidebar:"docs",previous:{title:"rucio-replica-recoverer",permalink:"/documentation/bin/rucio-replica-recoverer"},next:{title:"rucio-transmogrifier",permalink:"/documentation/bin/rucio-transmogrifier"}},l={},u=[],f={toc:u},d="wrapper";function m(e){var n=e.components,r=(0,o.c)(e,s);return(0,c.yg)(d,(0,t.c)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,c.yg)("pre",null,(0,c.yg)("code",{parentName:"pre"},'usage: rucio-storage-consistency-actions [-h] [--run-once] [--scope SCOPE]\n                                         [--rses RSES [RSES ...]]\n                                         [--sleep-time SLEEP_TIME]\n                                         [--dark-min-age DARK_MIN_AGE]\n                                         [--dark-threshold-percent DARK_THRESHOLD_PERCENT]\n                                         [--miss-threshold-percent MISS_THRESHOLD_PERCENT]\n                                         [--scanner-files-path SCANNER_FILES_PATH]\n                                         [--threads THREADS] [-f]\n\nThe Consistency-Actions daemon is responsible for applying the corrective actions resulting from a consistency-check scan of an RSE.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            One iteration only\n  --scope SCOPE         Scope of the input files produced by theiCC scanner -\n                        e.g.: "cms"\n  --rses RSES [RSES ...]\n                        RSEs to check, specified as a RSE expression. Defaults\n                        to check all RSEs.\n  --sleep-time SLEEP_TIME\n                        Concurrency control: thread sleep time (in seconds)\n                        after each chunk of work\n  --dark-min-age DARK_MIN_AGE\n                        Min. age (in days) of a file to be considered as DARK.\n  --dark-threshold-percent DARK_THRESHOLD_PERCENT\n                        Max. percentage of dark files at RSE, expressed as\n                        percents - e.g. 1.5 means 1.5%\n  --miss-threshold-percent MISS_THRESHOLD_PERCENT\n                        Max. percentage of missing files at RSE, expressed as\n                        percents - e.g. 1.5 means 1.5%\n  --scanner-files-path SCANNER_FILES_PATH\n                        The path where the CC scanner files are mounted.\n  --threads THREADS     Concurrency control: total number of threads on this\n                        process\n  -f, --force-proceed   Force CC actions, even if number of dark/missing files\n                        over thresholds\n\nRun the daemon::\n  $ rucio-storage-consistency-actions --run-once --scope cms --rses T2_US_Purdue T2_US_Nebraska --dark-threshold-percent 2.0 --miss-threshold-percent 1.5 --scanner-files-path /tmp/consistency-dump --sleep-time 10\n')))}m.isMDXComponent=!0}}]);