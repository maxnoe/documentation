"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9364],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=o.createContext({}),s=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=s(n),k=l,f=p["".concat(d,".").concat(k)]||p[k]||u[k]||r;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=k;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a[p]="string"==typeof e?e:l,i[1]=a;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}k.displayName="MDXCreateElement"},17792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=n(87462),l=n(63366),r=(n(67294),n(3905)),i=["components"],a={title:"DownloadClient"},d=void 0,s={unversionedId:"client_api/downloadclient",id:"client_api/downloadclient",title:"DownloadClient",description:"\\\\init\\\\",source:"@site/../docs/client_api/downloadclient.md",sourceDirName:"client_api",slug:"/client_api/downloadclient",permalink:"/documentation/client_api/downloadclient",draft:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/client_api/downloadclient.md",tags:[],version:"current",frontMatter:{title:"DownloadClient"},sidebar:"docs",previous:{title:"DiracClient",permalink:"/documentation/client_api/diracclient"},next:{title:"ExportClient",permalink:"/documentation/client_api/exportclient"}},c={},p=[{value:"__init__",id:"__init__",level:2},{value:"download_pfns",id:"download_pfns",level:2},{value:"download_dids",id:"download_dids",level:2},{value:"download_from_metalink_file",id:"download_from_metalink_file",level:2},{value:"download_aria2c",id:"download_aria2c",level:2},{value:"preferred_impl",id:"preferred_impl",level:2}],u={toc:p},k="wrapper";function f(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)(k,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"__init__"},"_","_","init","_","_"),(0,r.kt)("span",{style:{"white-space":"pre"}},(0,r.kt)("p",null,"Initialises the basic settings for an DownloadClient object"),(0,r.kt)("table",{style:{border:"none"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"client"),": Optional: rucio.client.client.Client object. If None, a new object will be created."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"external_traces"),": Optional: reference to a list where traces can be added"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"logger"),": Optional: logging.Logger object. If None, default logger will be used.")))))),(0,r.kt)("h2",{id:"download_pfns"},"download","_","pfns"),(0,r.kt)("span",{style:{"white-space":"pre"}},(0,r.kt)("p",null,"Download items with a given PFN. This function can only download files, no datasets."),(0,r.kt)("table",{style:{border:"none"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"items"),": List of dictionaries. Each dictionary describing a file to download. Keys:\npfn                            - PFN string of this file\ndid                            - DID string of this file (e.g. 'scope:file.name'). Wildcards are not allowed\nrse                            - rse name (e.g. 'CERN-PROD_DATADISK'). RSE Expressions are not allowed\nbase_dir                       - Optional: Base directory where the downloaded files will be stored. (Default: '.')\nno_subdir                      - Optional: If true, files are written directly into base_dir. (Default: False)\nadler32                        - Optional: The adler32 checmsum to compare the downloaded files adler32 checksum with\nmd5                            - Optional: The md5 checksum to compare the downloaded files md5 checksum with\ntransfer_timeout               - Optional: Timeout time for the download protocols. (Default: None)\ncheck_local_with_filesize_only - Optional: If true, already downloaded files will not be validated by checksum."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"num_threads"),": Suggestion of number of threads to use for the download. It will be lowered if it's too high."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"trace_custom_fields"),": Custom key value pairs to send with the traces"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"traces_copy_out"),": reference to an external list, where the traces should be uploaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deactivate_file_download_exceptions"),": Boolean, if file download exceptions shouldn't be raised"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Raises"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"InputValidationError"),": if one of the input items is in the wrong format"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NoFilesDownloaded"),": if no files could be downloaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NotAllFilesDownloaded"),": if not all files could be downloaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RucioException"),": if something unexpected went wrong during the download"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,"  a list of dictionaries with an entry for each file, containing the input options, the did, and the clientState\nclientState can be one of the following: ALREADY_DONE, DONE, FILE_NOT_FOUND, FAIL_VALIDATE, FAILED")))))),(0,r.kt)("h2",{id:"download_dids"},"download","_","dids"),(0,r.kt)("span",{style:{"white-space":"pre"}},(0,r.kt)("p",null,"Download items with given DIDs. This function can also download datasets and wildcarded DIDs."),(0,r.kt)("table",{style:{border:"none"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"items"),": List of dictionaries. Each dictionary describing an item to download. Keys:\ndid                            - DID string of this file (e.g. 'scope:file.name')\nfilters                        - Filter to select DIDs for download. Optional if DID is given\nrse                            - Optional: rse name (e.g. 'CERN-PROD_DATADISK') or rse expression from where to download\nimpl                           - Optional: name of the protocol implementation to be used to download this item.\nno_resolve_archives            - Optional: bool indicating whether archives should not be considered for download (Default: False)\nresolve_archives               - Deprecated: Use no_resolve_archives instead\nforce_scheme                   - Optional: force a specific scheme to download this item. (Default: None)\nbase_dir                       - Optional: base directory where the downloaded files will be stored. (Default: '.')\nno_subdir                      - Optional: If true, files are written directly into base_dir. (Default: False)\nnrandom                        - Optional: if the DID addresses a dataset, nrandom files will be randomly choosen for download from the dataset\nignore_checksum                - Optional: If true, skips the checksum validation between the downloaded file and the rucio catalouge. (Default: False)\ntransfer_timeout               - Optional: Timeout time for the download protocols. (Default: None)\ntransfer_speed_timeout         - Optional: Minimum allowed transfer speed (in KBps). Ignored if transfer_timeout set. Otherwise, used to compute default timeout (Default: 500)\ncheck_local_with_filesize_only - Optional: If true, already downloaded files will not be validated by checksum."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"num_threads"),": Suggestion of number of threads to use for the download. It will be lowered if it's too high."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"trace_custom_fields"),": Custom key value pairs to send with the traces."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"traces_copy_out"),": reference to an external list, where the traces should be uploaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deactivate_file_download_exceptions"),": Boolean, if file download exceptions shouldn't be raised"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sort"),": Select best replica by replica sorting algorithm. Available algorithms:\n",(0,r.kt)("inlineCode",{parentName:"p"},"geoip"),"       - based on src/dst IP topographical distance\n",(0,r.kt)("inlineCode",{parentName:"p"},"closeness"),"   - based on src/dst closeness\n",(0,r.kt)("inlineCode",{parentName:"p"},"dynamic"),"     - Rucio Dynamic Smart Sort (tm)"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Raises"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"InputValidationError"),": if one of the input items is in the wrong format"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NoFilesDownloaded"),": if no files could be downloaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NotAllFilesDownloaded"),": if not all files could be downloaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RucioException"),": if something unexpected went wrong during the download"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,"  a list of dictionaries with an entry for each file, containing the input options, the did, and the clientState")))))),(0,r.kt)("h2",{id:"download_from_metalink_file"},"download","_","from","_","metalink","_","file"),(0,r.kt)("span",{style:{"white-space":"pre"}},(0,r.kt)("p",null,"Download items using a given metalink file."),(0,r.kt)("table",{style:{border:"none"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"item"),": dictionary describing an item to download. Keys:\nbase_dir                       - Optional: base directory where the downloaded files will be stored. (Default: '.')\nno_subdir                      - Optional: If true, files are written directly into base_dir. (Default: False)\nignore_checksum                - Optional: If true, skips the checksum validation between the downloaded file and the rucio catalouge. (Default: False)\ntransfer_timeout               - Optional: Timeout time for the download protocols. (Default: None)\ncheck_local_with_filesize_only - Optional: If true, already downloaded files will not be validated by checksum."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"num_threads"),": Suggestion of number of threads to use for the download. It will be lowered if it's too high."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"trace_custom_fields"),": Custom key value pairs to send with the traces."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"traces_copy_out"),": reference to an external list, where the traces should be uploaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deactivate_file_download_exceptions"),": Boolean, if file download exceptions shouldn't be raised"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Raises"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"InputValidationError"),": if one of the input items is in the wrong format"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NoFilesDownloaded"),": if no files could be downloaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NotAllFilesDownloaded"),": if not all files could be downloaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RucioException"),": if something unexpected went wrong during the download"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,"  a list of dictionaries with an entry for each file, containing the input options, the did, and the clientState")))))),(0,r.kt)("h2",{id:"download_aria2c"},"download","_","aria2c"),(0,r.kt)("span",{style:{"white-space":"pre"}},(0,r.kt)("p",null,"Uses aria2c to download the items with given DIDs. This function can also download datasets and wildcarded DIDs."),(0,r.kt)("p",null,"It only can download files that are available via https/davs.\nAria2c needs to be installed and X509_USER_PROXY needs to be set!"),(0,r.kt)("table",{style:{border:"none"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"items"),": List of dictionaries. Each dictionary describing an item to download. Keys:\ndid                            - DID string of this file (e.g. 'scope:file.name'). Wildcards are not allowed\nrse                            - Optional: rse name (e.g. 'CERN-PROD_DATADISK') or rse expression from where to download\nbase_dir                       - Optional: base directory where the downloaded files will be stored. (Default: '.')\nno_subdir                      - Optional: If true, files are written directly into base_dir. (Default: False)\nnrandom                        - Optional: if the DID addresses a dataset, nrandom files will be randomly choosen for download from the dataset\nignore_checksum                - Optional: If true, skips the checksum validation between the downloaded file and the rucio catalouge. (Default: False)\ncheck_local_with_filesize_only - Optional: If true, already downloaded files will not be validated by checksum."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"trace_custom_fields"),": Custom key value pairs to send with the traces"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"filters"),": dictionary containing filter options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deactivate_file_download_exceptions"),": Boolean, if file download exceptions shouldn't be raised"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sort"),": Select best replica by replica sorting algorithm. Available algorithms:\n",(0,r.kt)("inlineCode",{parentName:"p"},"geoip"),"       - based on src/dst IP topographical distance\n",(0,r.kt)("inlineCode",{parentName:"p"},"closeness"),"   - based on src/dst closeness\n",(0,r.kt)("inlineCode",{parentName:"p"},"dynamic"),"     - Rucio Dynamic Smart Sort (tm)"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Raises"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"InputValidationError"),": if one of the input items is in the wrong format"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NoFilesDownloaded"),": if no files could be downloaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NotAllFilesDownloaded"),": if not all files could be downloaded"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RucioException"),": if something went wrong during the download (e.g. aria2c could not be started)"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,"  a list of dictionaries with an entry for each file, containing the input options, the did, and the clientState")))))),(0,r.kt)("h2",{id:"preferred_impl"},"preferred","_","impl"),(0,r.kt)("span",{style:{"white-space":"pre"}},(0,r.kt)("p",null,"Finds the optimum protocol impl preferred by the client and"),(0,r.kt)("p",null,"supported by the remote RSE."),(0,r.kt)("table",{style:{border:"none"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sources"),": List of sources for a given DID"))),(0,r.kt)("tr",{style:{border:"none"}},(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Raises"),":")),(0,r.kt)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"}},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RucioException(msg)"),": general exception with msg for more details.")))))))}f.isMDXComponent=!0}}]);