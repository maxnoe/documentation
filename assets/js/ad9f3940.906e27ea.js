"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[424],{95788:(e,r,n)=>{n.d(r,{Iu:()=>l,yg:()=>d});var t=n(11504);function c(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){c(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,c=function(e,r){if(null==e)return{};var n,t,c={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(c[n]=e[n]);return c}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var u=t.createContext({}),s=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},l=function(e){var r=s(e.components);return t.createElement(u.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,c=e.mdxType,o=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=s(n),f=c,d=p["".concat(u,".").concat(f)]||p[f]||m[f]||o;return n?t.createElement(d,i(i({ref:r},l),{},{components:n})):t.createElement(d,i({ref:r},l))}));function d(e,r){var n=arguments,c=r&&r.mdxType;if("string"==typeof e||c){var o=n.length,i=new Array(o);i[0]=f;var a={};for(var u in r)hasOwnProperty.call(r,u)&&(a[u]=r[u]);a.originalType=e,a[p]="string"==typeof e?e:c,i[1]=a;for(var s=2;s<o;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},51612:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>u,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var t=n(45072),c=n(95656),o=(n(11504),n(95788)),i=["components"],a={title:"rucio-cache-consumer"},u=void 0,s={unversionedId:"bin/rucio-cache-consumer",id:"bin/rucio-cache-consumer",title:"rucio-cache-consumer",description:"",source:"@site/../docs/bin/rucio-cache-consumer.md",sourceDirName:"bin",slug:"/bin/rucio-cache-consumer",permalink:"/documentation/bin/rucio-cache-consumer",draft:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-cache-consumer.md",tags:[],version:"current",frontMatter:{title:"rucio-cache-consumer"},sidebar:"docs",previous:{title:"rucio-cache-client",permalink:"/documentation/bin/rucio-cache-client"},next:{title:"rucio-conveyor-finisher",permalink:"/documentation/bin/rucio-conveyor-finisher"}},l={},p=[],m={toc:p},f="wrapper";function d(e){var r=e.components,n=(0,c.c)(e,i);return(0,o.yg)(f,(0,t.c)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"usage: rucio-cache-consumer [-h] [--num-thread NUM_THREAD]\n\nRucio Cache Consumer is a daemon to add/delete cache replicas to Rucio\ncatalog.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --num-thread NUM_THREAD\n                        Concurrency control: threads number\n")))}d.isMDXComponent=!0}}]);